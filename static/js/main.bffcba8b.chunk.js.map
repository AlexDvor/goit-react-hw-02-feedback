{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.styled.jsx","components/Notification/Notification.js","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.js","components/Container/Container.styled.jsx","components/Container/Container.js","components/Section/Section.styled.jsx","components/Section/Section.js","App.js","index.js"],"names":["Buttons","styled","button","FeedbackOptions","onLeaveFeedback","onClick","NotificationMessage","p","Notification","message","FeedBackItem","Statistics","good","neutral","bad","total","positivePercentage","Box","div","Container","children","SectionItem","section","Title","h2","Section","text","App","state","leaveFeedback","value","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Number","toFixed","totalFeedback","this","positiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","querySelector"],"mappings":"0PAGaA,EAAUC,IAAOC,OAAV,4J,OCgBLC,I,EAAAA,EAff,YAA6C,IAAnBC,EAAkB,EAAlBA,gBACtB,OACI,qCACI,cAACJ,EAAD,CAASK,QAAS,kBAAID,EAAgB,SAAtC,kBACA,cAACJ,EAAD,CAASK,QAAS,kBAAID,EAAgB,YAAtC,qBACA,cAACJ,EAAD,CAASK,QAAS,kBAAKD,EAAgB,QAAvC,qBCPCE,EAAsBL,IAAOM,EAAV,8BCejBC,I,EAAAA,EAdf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OACI,mCACI,cAACH,EAAD,UAAsBG,OCJrBC,EAAeT,IAAOM,EAAV,4BC6BVI,I,EAAAA,EAzBf,YAAoE,IAA9CC,EAA6C,EAA7CA,KAAKC,EAAwC,EAAxCA,QAAQC,EAAgC,EAAhCA,IAAIC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,mBACzC,OACI,mCACKD,EAAQ,EAAI,qCACb,eAACL,EAAD,oBAAqBE,KACrB,eAACF,EAAD,uBAAwBG,KACxB,eAACH,EAAD,mBAAoBI,KACpB,eAACJ,EAAD,qBAAsBK,KACtB,eAACL,EAAD,iCAAkCM,EAAlC,UACM,cAAC,EAAD,CAAcP,QAAQ,yBCb3BQ,EAAMhB,IAAOiB,IAAV,2ICKDC,I,IAAAA,EAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,cAACH,EAAD,UAAMG,KCFFC,EAAcpB,IAAOqB,QAAV,4BAGXC,EAAQtB,IAAOuB,GAAV,0BCYHC,MAbf,YAAsC,IAAnBC,EAAkB,EAAlBA,KAAMN,EAAY,EAAZA,SACrB,OACI,eAACC,EAAD,WACI,cAACE,EAAD,UAAQG,IACPN,MCqFEO,E,4MAlFXC,MAAQ,CACJhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTe,cAAgB,SAAAC,GAEE,SAAVA,GACA,EAAKC,UAAS,SAACC,GACX,MAAO,CACLpB,KAAMoB,EAAUpB,KAAO,MAKnB,YAAVkB,GACA,EAAKC,UAAS,SAACC,GACX,MAAO,CACHnB,QAASmB,EAAUnB,QAAU,MAK3B,QAAViB,GACA,EAAKC,UAAS,SAACC,GACX,MAAO,CACHlB,IAAKkB,EAAUlB,IAAM,O,EAOvCmB,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQhB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBoB,gCAAkC,SAACnB,GACjC,GAAc,IAAVA,EACF,OAAO,EAGT,IAAQH,EAAS,EAAKgB,MAAdhB,KAER,OAAOuB,QADYvB,EAAOG,EAAQ,KACTqB,Y,4CAI3B,WAEE,IAAMC,EAAgBC,KAAKL,qBACrBM,EAA6BD,KAAKJ,gCAAgCG,GACxE,EAA+BC,KAAKV,MAA5BhB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAGnB,OACI,eAAC,EAAD,WAEI,cAAC,EAAD,CAASY,KAAK,wBAAd,SACI,cAAC,EAAD,CAAiBtB,gBAAiBkC,KAAKT,kBAG3C,cAAC,EAAD,CAASH,KAAK,aAAd,SACI,cAAC,EAAD,CACId,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,EACPrB,mBAAoBuB,a,GAxE1BC,a,MCJlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BJ,IAASC,OAAO,cAAC,EAAD,IAASE,SAASE,cAAc,Y","file":"static/js/main.bffcba8b.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\n\r\nexport const Buttons = styled.button`\r\npadding:5px 10px;\r\nmargin-right: 20px;\r\nborder-radius:5px;\r\nborder:none;\r\n\r\n\r\n&:hover,\r\n&:focus {\r\n  background-color: tomato;\r\n`","\r\nimport {Buttons} from './FeedbackOptions.styled'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FeedbackOptions({onLeaveFeedback}) {\r\n    return (\r\n        <>\r\n            <Buttons onClick={()=>onLeaveFeedback(\"good\")}>good</Buttons>\r\n            <Buttons onClick={()=>onLeaveFeedback(\"neutral\")}>neutral</Buttons>\r\n            <Buttons onClick={() =>onLeaveFeedback(\"bad\")}>bad</Buttons>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\nonLeaveFeedback:PropTypes.func,\r\n}\r\n\r\nexport default FeedbackOptions;","import styled from \"@emotion/styled\";\r\n\r\nexport const NotificationMessage = styled.p`\r\n\r\n`","import PropTypes from 'prop-types';\r\nimport { NotificationMessage } from './Notification.styled.jsx'\r\n\r\nfunction Notification({ message }) {\r\n    return (\r\n        <>\r\n            <NotificationMessage>{message}</NotificationMessage>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n\r\nNotification.propTypes = {\r\n    message:PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import styled from \"@emotion/styled\";\r\n\r\nexport const FeedBackItem = styled.p`\r\n`","\r\n// import style from './FeedBackStat.module.css'\r\nimport Notification from \"../Notification\";\r\nimport PropTypes from 'prop-types';\r\nimport { FeedBackItem } from './Statistics.styled'\r\n\r\nfunction Statistics({ good,neutral,bad,total,positivePercentage }) {\r\n    return (\r\n        <>\r\n            {total > 0 ? <>\r\n            <FeedBackItem>good: {good}</FeedBackItem>\r\n            <FeedBackItem>neutral: {neutral}</FeedBackItem>\r\n            <FeedBackItem>bad: {bad}</FeedBackItem>\r\n            <FeedBackItem>total: {total}</FeedBackItem>\r\n            <FeedBackItem>positive feedback: {positivePercentage}%</FeedBackItem>\r\n            </> : <Notification message=\"No feedback given\"></Notification>}\r\n        </>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good:PropTypes.number,\r\n    number:PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total:PropTypes.number,\r\n    positivePercentage :PropTypes.number,\r\n}\r\n\r\n\r\n\r\n\r\nexport default Statistics;","import styled from '@emotion/styled'\r\n\r\nexport const Box = styled.div`\r\n  max-width: 1080px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 15px 20px;\r\n  margin-top: 25px;\r\n`","import {Box} from './Container.styled'\r\n\r\n\r\nfunction Container({ children }) {\r\n  return <Box>{children}</Box>;\r\n}\r\n\r\nexport default Container;","import styled from \"@emotion/styled\";\r\n\r\nexport const SectionItem = styled.section`\r\n`\r\n\r\nexport const Title = styled.h2``","\r\nimport PropTypes from 'prop-types';\r\nimport {SectionItem ,Title} from './Section.styled'\r\n\r\nfunction Section({ text, children }) {\r\n    return (\r\n        <SectionItem >\r\n            <Title>{text}</Title>\r\n            {children}\r\n        </SectionItem >\r\n)\r\n}\r\n\r\nSection.propTypes = {\r\n    text:PropTypes.string,\r\n}\r\n\r\nexport default Section;","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Container from \"./components/Container/Container\";\nimport Section from \"./components/Section\";\n\n\n\n\nclass App extends Component {\n\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n\n    leaveFeedback = value => {\n\n        if (value === \"good\") {\n            this.setState((prevState) => {\n                return {\n                  good: prevState.good + 1\n                }\n            })\n        }\n\n        if (value === \"neutral\") {\n            this.setState((prevState) => {\n                return {\n                    neutral: prevState.neutral + 1\n                }\n            })\n        }\n\n        if (value === \"bad\") {\n            this.setState((prevState) => {\n                return {\n                    bad: prevState.bad + 1\n                }\n            })\n        }\n    }\n  \n  \n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage = (total) => {\n    if (total === 0) {\n      return 0;\n    }\n\n    const { good } = this.state;\n    const percentage = good / total * 100;\n    return Number(percentage.toFixed());\n    \n  }\n\n  render() {\n      \n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage(totalFeedback);\n    const { good, neutral, bad } = this.state;\n      \n\n        return (\n            <Container>\n\n                <Section text='please leave feedback'>\n                    <FeedbackOptions onLeaveFeedback={this.leaveFeedback}></FeedbackOptions>\n                </Section>\n\n                <Section text='statistics'>\n                    <Statistics\n                        good={good}\n                        neutral={neutral}\n                        bad={bad}\n                        total={totalFeedback}\n                        positivePercentage={positiveFeedbackPercentage}>\n                    </Statistics>\n                 </Section>\n            \n        </Container>\n                        )\n                }\n            \n\n\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}